@inject IProjectService ProjectService
@inject IToastService ToastService

<EditForm Model="@ProjectChangeInfo" OnValidSubmit="SaveProject">
    <div class="pb-3 border-bottom">
        <label for="firebase-id" class="add-form-label">Firebase Id</label>
        <InputText 
            id="firebase-id" 
            class="form-control"
            @bind-Value="ProjectChangeInfo.ProjectId"
        />
    </div>
    <div class="py-3">
        <label for="firebase-sdk" class="add-form-label">Firebase SDK</label>
        <DragAndDropTextArea 
            id="firebase-sdk" 
            @bind-Value="ProjectChangeInfo.Credentials" 
        />
    </div>
    <button type="submit" class="btn btn-primary">수정</button>
</EditForm>

@code {


    protected override void OnInitialized()
    {
        ProjectChangeInfo = (ProjectInfo)ProjectService.ProjectInfo!.Clone();
    }

    void SaveProject()
    {
        if (ProjectChangeInfo == null)
        {
            return;
        }
        try 
        {
            ProjectService.ChangeProjectInfo(ProjectChangeInfo);
        }
        catch (Exception e)
        {
            ToastService.ShowError($"프로젝트를 수정하는데 오류가 발생했습니다. {e.Message}");
            return;
        }
        ToastService.ShowSuccess($"프로젝트를 수정하였습니다.");
        ModalInstance?.CloseAsync();
    }


    [CascadingParameter] BlazoredModalInstance? ModalInstance { get; set; }

    ProjectInfo ProjectChangeInfo { get; set; } = new ProjectInfo{};
}